(()=>{"use strict";var t={972:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Graph=void 0,e.Graph=class{constructor(){this.adjacencyList=new Map}addVertex(t){this.adjacencyList.has(t)||this.adjacencyList.set(t,[])}addEdge(t,e,a){this.adjacencyList.get(t).push({node:e,weight:a}),this.adjacencyList.get(e).push({node:t,weight:a})}generateSquareGrid(t,e){for(let a=0;a<t;a++)for(let t=0;t<e;t++){const e=`${a},${t}`;if(this.addVertex(e),a>0){const r=`${a-1},${t}`,s=Math.floor(100*Math.random())+1;this.addEdge(e,r,s)}if(t>0){const r=`${a},${t-1}`,s=Math.floor(100*Math.random())+1;this.addEdge(e,r,s)}}}printGraph(){for(let[t,e]of this.adjacencyList){const a=e.map((t=>`${t.node}(${t.weight})`)).join(", ");console.log(`${t} -> ${a}`)}}}}},e={};function a(r){var s=e[r];if(void 0!==s)return s.exports;var o=e[r]={exports:{}};return t[r](o,o.exports,a),o.exports}new(a(972).Graph),new p5((t=>{t.setup=()=>{t.createCanvas(t.windowWidth,t.windowHeight),t.background(0)},t.draw=()=>{}}))})();