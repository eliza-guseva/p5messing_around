(()=>{"use strict";var e={972:(e,t)=>{function s(e,t){return Math.floor(100*Math.random())+1}Object.defineProperty(t,"__esModule",{value:!0}),t.SquareGrid=t.Graph=t.genWeight=void 0,t.genWeight=s;class i{constructor(){this.adjacencyList=new Map}getVertexKey(e){return e.toString()}StringToVertex(e){return e.split(",").map(Number)}addVertex(e){const t=this.getVertexKey(e);this.adjacencyList.has(t)||this.adjacencyList.set(t,[])}addEdge(e,t,s){const i=this.getVertexKey(e),r=this.getVertexKey(t);this.adjacencyList.get(i).push({node:r,weight:s}),this.adjacencyList.get(i).push({node:r,weight:s})}printGraph(){for(let[e,t]of this.adjacencyList){const s=t.map((e=>`${e.node}(${e.weight})`)).join(", ");console.log(`${e} -> ${s}`)}}}t.Graph=i,t.SquareGrid=class extends i{constructor(e,t,s){super(),this.center=[Math.ceil(e/2),Math.ceil(t/2)],this.x_step=s.windowWidth/e,this.y_step=s.windowHeight/t,this.x_offset=this.x_step/2,this.y_offset=this.y_step/2,this.generateSquareGrid(e,t),this.vertCoordinates=this.generateSquareDistances(e,t)}generateSquareGrid(e,t){for(let i=0;i<e;i++)for(let e=0;e<t;e++){const t=[i,e];if(this.addVertex(t),i>0){const r=[i-1,e],n=s();this.addEdge(t,r,n)}if(e>0){const r=[i,e-1],n=s();this.addEdge(t,r,n)}}}generateSquareDistances(e,t){let s=new Map;for(let i=0;i<e;i++)for(let e=0;e<t;e++)s.set(this.getVertexKey([i,e]),[this.x_offset+i*this.x_step,this.y_offset+e*this.y_step]);return s}drawPrimsLabyrinth(e){let t=this.getVertexKey(this.center),s=this.vertCoordinates.get(t);e.ellipse(s[0],s[1],this.x_step/3,this.y_step/3),e.fill(255),this.adjacencyList.keys();const i=new Set,r=[];i.add(t);let n=0;for(this.adjacencyList.get(t).forEach((e=>{r.push(Object.assign(Object.assign({},e),{from:t}))}));r.length>0;){r.sort(((e,t)=>e.weight-t.weight));const t=r.shift();i.has(t.node)||(i.add(t.node),e.ellipse(this.vertCoordinates.get(t.node)[0],this.vertCoordinates.get(t.node)[1],this.x_step/3,this.y_step/3),e.fill(255),n+=t.weight,console.log(`Edge added: ${t.from} - ${t.node}, weight: ${t.weight}`),this.adjacencyList.get(t.node).forEach((e=>{i.has(e.node)||r.push(Object.assign(Object.assign({},e),{from:t.node}))})))}}}}},t={};function s(i){var r=t[i];if(void 0!==r)return r.exports;var n=t[i]={exports:{}};return e[i](n,n.exports,s),n.exports}(()=>{const e=s(972);new p5((t=>{let s=new e.SquareGrid(29,Math.ceil(29*t.windowHeight/t.windowWidth),t);t.setup=()=>{t.createCanvas(t.windowWidth,t.windowHeight),t.background(0),t.noLoop()},t.draw=()=>{for(let[e,i]of s.vertCoordinates)t.ellipse(i[0],i[1],5,5),t.fill(100),s.drawPrimsLabyrinth(t)}}))})()})();